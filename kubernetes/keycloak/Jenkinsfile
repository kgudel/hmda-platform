pipeline {
    agent {
        label 'hmdaops'
    }
    stages {
        stage('init') {
            steps {
                script {
                    init.setEnvironment('modified_lar')
                }
            }
        }

        stage('Ambassador Service') {
            agent {
                docker {
                    image 'hmda/helm'
                    reuseNode true
                    args '--entrypoint=\'\''
                }
            }
            steps {
                script {
                    withCredentials([file(credentialsId: 'hmda-ops-kubeconfig', variable: 'KUBECONFIG')]) {
                        if (env.BRANCH_NAME == 'master') {
                            container('helm') {
                                sh "kubectl create --namespace=default -f kubernetes/keycloak/keycloak-ambassador.yaml | exit 0"
                            }
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            agent {
                docker {
                    image 'hmda/helm'
                    reuseNode true
                    args '--entrypoint=\'\''
                }
            }
            steps {
                script {
                    withCredentials([file(credentialsId: 'hmda-ops-kubeconfig', variable: 'KUBECONFIG')]) {
                        if (env.DOCKER_PUSH == 'true') {
                            helm.deploy('modified-lar')
                        }
                    }
                }
            }
        }
    }

}